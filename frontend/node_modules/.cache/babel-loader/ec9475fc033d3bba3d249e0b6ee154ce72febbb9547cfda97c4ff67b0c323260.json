{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { ethers } from 'ethers';\nimport api from '../api';\n\n// 导入合约配置\nimport contractConfig from '../contractConfig';\nexport default {\n  name: 'HomeView',\n  setup() {\n    const store = useStore();\n    const connecting = ref(false);\n    const initializing = ref(false);\n    const initialized = ref(false);\n    const connectError = ref('');\n\n    // 课程重要程度相关数据\n    const loadingImportance = ref(false);\n    const importanceData = ref([]);\n    const showImportanceTable = ref(false);\n\n    // 从Vuex获取状态\n    const account = computed(() => store.state.account);\n    const isConnected = computed(() => store.getters.isConnected);\n\n    // 连接MetaMask\n    const connectMetaMask = async () => {\n      connecting.value = true;\n      connectError.value = '';\n      try {\n        const account = await store.dispatch('connectWallet');\n        if (!account) {\n          connectError.value = '连接钱包失败，请确保已安装MetaMask并已登录';\n        }\n      } catch (error) {\n        console.error('连接钱包错误:', error);\n        connectError.value = '连接钱包时发生错误: ' + error.message;\n      } finally {\n        connecting.value = false;\n      }\n    };\n\n    // 初始化系统数据\n    const initializeData = async () => {\n      initializing.value = true;\n      try {\n        // 检查网络是否为Ganache (ID 1337)\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const network = await provider.getNetwork();\n        if (network.chainId !== 1337) {\n          alert('请连接到Ganache网络');\n          initializing.value = false;\n          return;\n        }\n\n        // 调用后端API初始化数据\n        const response = await api.initializeData();\n        console.log('初始化结果:', response);\n        if (response.code === 0) {\n          initialized.value = true;\n          store.commit('setInitialized', true);\n        } else {\n          alert('初始化失败: ' + response.message);\n        }\n      } catch (error) {\n        console.error('初始化系统数据错误:', error);\n        alert('初始化系统数据时发生错误: ' + error.message);\n      } finally {\n        initializing.value = false;\n      }\n    };\n\n    // 获取课程重要程度数据\n    const getCourseImportance = async () => {\n      loadingImportance.value = true;\n      try {\n        const response = await api.getCourseImportance();\n        console.log('课程重要程度数据:', response);\n        if (response.code === 0) {\n          importanceData.value = response.data;\n          showImportanceTable.value = true;\n        } else {\n          alert('获取课程重要程度失败: ' + response.message);\n        }\n      } catch (error) {\n        console.error('获取课程重要程度错误:', error);\n        alert('获取课程重要程度时发生错误: ' + error.message);\n      } finally {\n        loadingImportance.value = false;\n      }\n    };\n\n    // 组件挂载时执行\n    onMounted(async () => {\n      // 如果已经有MetaMask连接，则自动连接\n      if (window.ethereum && window.ethereum.selectedAddress) {\n        await connectMetaMask();\n      }\n    });\n    return {\n      connectMetaMask,\n      initializeData,\n      getCourseImportance,\n      account,\n      isConnected,\n      connecting,\n      initializing,\n      initialized,\n      connectError,\n      loadingImportance,\n      importanceData,\n      showImportanceTable\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","ethers","api","contractConfig","name","setup","store","connecting","initializing","initialized","connectError","loadingImportance","importanceData","showImportanceTable","account","state","isConnected","getters","connectMetaMask","value","dispatch","error","console","message","initializeData","provider","providers","Web3Provider","window","ethereum","network","getNetwork","chainId","alert","response","log","code","commit","getCourseImportance","data","selectedAddress"],"sources":["E:\\dao\\327\\Course-allocation\\frontend\\src\\views\\Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-container\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h1>课程分配系统</h1>\r\n        </div>\r\n      </template>\r\n      <div v-if=\"!isConnected\" class=\"connect-section\">\r\n        <el-alert\r\n          v-if=\"connectError\"\r\n          :title=\"connectError\"\r\n          type=\"error\"\r\n          show-icon\r\n          :closable=\"false\"\r\n          style=\"margin-bottom: 20px;\"\r\n        />\r\n        <el-button type=\"primary\" @click=\"connectMetaMask\" :loading=\"connecting\">\r\n          连接 MetaMask 钱包\r\n        </el-button>\r\n      </div>\r\n      <div v-else class=\"init-section\">\r\n        <p>当前钱包地址: {{ account }}</p>\r\n        <div class=\"action-buttons\">\r\n          <el-button \r\n            type=\"success\" \r\n            @click=\"initializeData\"\r\n            :loading=\"initializing\"\r\n            :disabled=\"initialized\"\r\n          >\r\n            一键初始化系统数据\r\n          </el-button>\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"getCourseImportance\"\r\n            :loading=\"loadingImportance\"\r\n            :disabled=\"!initialized\"\r\n          >\r\n            查看课程重要程度\r\n          </el-button>\r\n          <el-button type=\"info\" @click=\"$router.push('/about')\">关于系统</el-button>\r\n        </div>\r\n        <el-result \r\n          v-if=\"initialized && !showImportanceTable\" \r\n          icon=\"success\" \r\n          title=\"初始化成功\" \r\n          sub-title=\"系统数据已成功初始化，可以开始使用系统功能\"\r\n        />\r\n        \r\n        <!-- 课程重要程度表格 -->\r\n        <div v-if=\"showImportanceTable\" class=\"importance-table-section\">\r\n          <h2>课程重要程度与智能体适合度</h2>\r\n          <el-table :data=\"importanceData\" border stripe style=\"width: 100%\">\r\n            <el-table-column prop=\"courseId\" label=\"课程ID\" width=\"120\" />\r\n            <el-table-column prop=\"courseName\" label=\"课程名称\" width=\"180\" />\r\n            <el-table-column prop=\"importance\" label=\"重要程度\" width=\"120\" />\r\n            <el-table-column prop=\"agentSuit1\" label=\"智能体1对课程的适合程度\" />\r\n            <el-table-column prop=\"agentSuit2\" label=\"智能体2对课程的适合程度\" />\r\n          </el-table>\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"showImportanceTable = false\"\r\n            style=\"margin-top: 20px;\"\r\n          >\r\n            隐藏表格\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { ethers } from 'ethers'\r\nimport api from '../api'\r\n\r\n// 导入合约配置\r\nimport contractConfig from '../contractConfig'\r\n\r\nexport default {\r\n  name: 'HomeView',\r\n  setup() {\r\n    const store = useStore()\r\n    const connecting = ref(false)\r\n    const initializing = ref(false)\r\n    const initialized = ref(false)\r\n    const connectError = ref('')\r\n    \r\n    // 课程重要程度相关数据\r\n    const loadingImportance = ref(false)\r\n    const importanceData = ref([])\r\n    const showImportanceTable = ref(false)\r\n\r\n    // 从Vuex获取状态\r\n    const account = computed(() => store.state.account)\r\n    const isConnected = computed(() => store.getters.isConnected)\r\n\r\n    // 连接MetaMask\r\n    const connectMetaMask = async () => {\r\n      connecting.value = true\r\n      connectError.value = ''\r\n      \r\n      try {\r\n        const account = await store.dispatch('connectWallet')\r\n        if (!account) {\r\n          connectError.value = '连接钱包失败，请确保已安装MetaMask并已登录'\r\n        }\r\n      } catch (error) {\r\n        console.error('连接钱包错误:', error)\r\n        connectError.value = '连接钱包时发生错误: ' + error.message\r\n      } finally {\r\n        connecting.value = false\r\n      }\r\n    }\r\n\r\n    // 初始化系统数据\r\n    const initializeData = async () => {\r\n      initializing.value = true\r\n      try {\r\n        // 检查网络是否为Ganache (ID 1337)\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n        const network = await provider.getNetwork()\r\n        \r\n        if (network.chainId !== 1337) {\r\n          alert('请连接到Ganache网络')\r\n          initializing.value = false\r\n          return\r\n        }\r\n\r\n        // 调用后端API初始化数据\r\n        const response = await api.initializeData()\r\n        console.log('初始化结果:', response)\r\n        \r\n        if (response.code === 0) {\r\n          initialized.value = true\r\n          store.commit('setInitialized', true)\r\n        } else {\r\n          alert('初始化失败: ' + response.message)\r\n        }\r\n      } catch (error) {\r\n        console.error('初始化系统数据错误:', error)\r\n        alert('初始化系统数据时发生错误: ' + error.message)\r\n      } finally {\r\n        initializing.value = false\r\n      }\r\n    }\r\n    \r\n    // 获取课程重要程度数据\r\n    const getCourseImportance = async () => {\r\n      loadingImportance.value = true\r\n      try {\r\n        const response = await api.getCourseImportance()\r\n        console.log('课程重要程度数据:', response)\r\n        \r\n        if (response.code === 0) {\r\n          importanceData.value = response.data\r\n          showImportanceTable.value = true\r\n        } else {\r\n          alert('获取课程重要程度失败: ' + response.message)\r\n        }\r\n      } catch (error) {\r\n        console.error('获取课程重要程度错误:', error)\r\n        alert('获取课程重要程度时发生错误: ' + error.message)\r\n      } finally {\r\n        loadingImportance.value = false\r\n      }\r\n    }\r\n\r\n    // 组件挂载时执行\r\n    onMounted(async () => {\r\n      // 如果已经有MetaMask连接，则自动连接\r\n      if (window.ethereum && window.ethereum.selectedAddress) {\r\n        await connectMetaMask()\r\n      }\r\n    })\r\n\r\n    return {\r\n      connectMetaMask,\r\n      initializeData,\r\n      getCourseImportance,\r\n      account,\r\n      isConnected,\r\n      connecting,\r\n      initializing,\r\n      initialized,\r\n      connectError,\r\n      loadingImportance,\r\n      importanceData,\r\n      showImportanceTable\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.home-container {\r\n  max-width: 800px;\r\n  margin: 50px auto;\r\n  padding: 0 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.connect-section, .init-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n  padding: 20px 0;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin: 20px 0;\r\n}\r\n\r\n.importance-table-section {\r\n  width: 100%;\r\n  margin-top: 20px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}