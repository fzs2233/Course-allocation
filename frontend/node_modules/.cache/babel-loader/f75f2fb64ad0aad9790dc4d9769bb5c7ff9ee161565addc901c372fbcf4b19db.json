{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { ethers } from 'ethers';\nimport api from '../api';\n\n// 导入合约配置\nimport contractConfig from '../contractConfig';\nexport default {\n  name: 'HomeView',\n  setup() {\n    const store = useStore();\n    const connecting = ref(false);\n    const initializing = ref(false);\n    const initialized = ref(false);\n    const connectError = ref('');\n\n    // 从Vuex获取状态\n    const account = computed(() => store.state.account);\n    const isConnected = computed(() => store.getters.isConnected);\n\n    // 连接MetaMask\n    const connectMetaMask = async () => {\n      connecting.value = true;\n      connectError.value = '';\n      try {\n        const account = await store.dispatch('connectWallet');\n        if (!account) {\n          connectError.value = '连接钱包失败，请确保已安装MetaMask并已登录';\n        }\n      } catch (error) {\n        console.error('连接钱包错误:', error);\n        connectError.value = '连接钱包时发生错误: ' + error.message;\n      } finally {\n        connecting.value = false;\n      }\n    };\n\n    // 初始化系统数据\n    const initializeData = async () => {\n      initializing.value = true;\n      try {\n        // 检查网络是否为Ganache (ID 1337)\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const network = await provider.getNetwork();\n        if (network.chainId !== 1337) {\n          alert('请连接到Ganache网络');\n          initializing.value = false;\n          return;\n        }\n\n        // 调用后端API初始化数据\n        const response = await api.initializeData();\n        console.log('初始化结果:', response);\n        if (response.code === 0) {\n          initialized.value = true;\n          store.commit('setInitialized', true);\n        } else {\n          alert('初始化失败: ' + response.message);\n        }\n      } catch (error) {\n        console.error('初始化系统数据错误:', error);\n        alert('初始化系统数据时发生错误: ' + error.message);\n      } finally {\n        initializing.value = false;\n      }\n    };\n\n    // 组件挂载时执行\n    onMounted(async () => {\n      // 如果已经有MetaMask连接，则自动连接\n      if (window.ethereum && window.ethereum.selectedAddress) {\n        await connectMetaMask();\n      }\n    });\n    return {\n      connectMetaMask,\n      initializeData,\n      account,\n      isConnected,\n      connecting,\n      initializing,\n      initialized,\n      connectError\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","ethers","api","contractConfig","name","setup","store","connecting","initializing","initialized","connectError","account","state","isConnected","getters","connectMetaMask","value","dispatch","error","console","message","initializeData","provider","providers","Web3Provider","window","ethereum","network","getNetwork","chainId","alert","response","log","code","commit","selectedAddress"],"sources":["E:\\dao\\327\\Course-allocation\\frontend\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <h1>课程分配系统</h1>\n        </div>\n      </template>\n      <div v-if=\"!isConnected\" class=\"connect-section\">\n        <el-alert\n          v-if=\"connectError\"\n          :title=\"connectError\"\n          type=\"error\"\n          show-icon\n          :closable=\"false\"\n          style=\"margin-bottom: 20px;\"\n        />\n        <el-button type=\"primary\" @click=\"connectMetaMask\" :loading=\"connecting\">\n          连接 MetaMask 钱包\n        </el-button>\n      </div>\n      <div v-else class=\"init-section\">\n        <p>当前钱包地址: {{ account }}</p>\n        <div class=\"action-buttons\">\n          <el-button \n            type=\"success\" \n            @click=\"initializeData\"\n            :loading=\"initializing\"\n            :disabled=\"initialized\"\n          >\n            一键初始化系统数据\n          </el-button>\n          <el-button type=\"info\" @click=\"$router.push('/about')\">关于系统</el-button>\n        </div>\n        <el-result \n          v-if=\"initialized\" \n          icon=\"success\" \n          title=\"初始化成功\" \n          sub-title=\"系统数据已成功初始化，可以开始使用系统功能\"\n        />\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { ethers } from 'ethers'\nimport api from '../api'\n\n// 导入合约配置\nimport contractConfig from '../contractConfig'\n\nexport default {\n  name: 'HomeView',\n  setup() {\n    const store = useStore()\n    const connecting = ref(false)\n    const initializing = ref(false)\n    const initialized = ref(false)\n    const connectError = ref('')\n\n    // 从Vuex获取状态\n    const account = computed(() => store.state.account)\n    const isConnected = computed(() => store.getters.isConnected)\n\n    // 连接MetaMask\n    const connectMetaMask = async () => {\n      connecting.value = true\n      connectError.value = ''\n      \n      try {\n        const account = await store.dispatch('connectWallet')\n        if (!account) {\n          connectError.value = '连接钱包失败，请确保已安装MetaMask并已登录'\n        }\n      } catch (error) {\n        console.error('连接钱包错误:', error)\n        connectError.value = '连接钱包时发生错误: ' + error.message\n      } finally {\n        connecting.value = false\n      }\n    }\n\n    // 初始化系统数据\n    const initializeData = async () => {\n      initializing.value = true\n      try {\n        // 检查网络是否为Ganache (ID 1337)\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const network = await provider.getNetwork()\n        \n        if (network.chainId !== 1337) {\n          alert('请连接到Ganache网络')\n          initializing.value = false\n          return\n        }\n\n        // 调用后端API初始化数据\n        const response = await api.initializeData()\n        console.log('初始化结果:', response)\n        \n        if (response.code === 0) {\n          initialized.value = true\n          store.commit('setInitialized', true)\n        } else {\n          alert('初始化失败: ' + response.message)\n        }\n      } catch (error) {\n        console.error('初始化系统数据错误:', error)\n        alert('初始化系统数据时发生错误: ' + error.message)\n      } finally {\n        initializing.value = false\n      }\n    }\n\n    // 组件挂载时执行\n    onMounted(async () => {\n      // 如果已经有MetaMask连接，则自动连接\n      if (window.ethereum && window.ethereum.selectedAddress) {\n        await connectMetaMask()\n      }\n    })\n\n    return {\n      connectMetaMask,\n      initializeData,\n      account,\n      isConnected,\n      connecting,\n      initializing,\n      initialized,\n      connectError\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home-container {\n  max-width: 800px;\n  margin: 50px auto;\n  padding: 0 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.connect-section, .init-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  padding: 20px 0;\n}\n\n.action-buttons {\n  display: flex;\n  gap: 15px;\n  margin: 20px 0;\n}\n</style> "],"mappings":"AA8CA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAI;AAC7C,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,MAAK,QAAS,QAAO;AAC9B,OAAOC,GAAE,MAAO,QAAO;;AAEvB;AACA,OAAOC,cAAa,MAAO,mBAAkB;AAE7C,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIN,QAAQ,CAAC;IACvB,MAAMO,UAAS,GAAIV,GAAG,CAAC,KAAK;IAC5B,MAAMW,YAAW,GAAIX,GAAG,CAAC,KAAK;IAC9B,MAAMY,WAAU,GAAIZ,GAAG,CAAC,KAAK;IAC7B,MAAMa,YAAW,GAAIb,GAAG,CAAC,EAAE;;IAE3B;IACA,MAAMc,OAAM,GAAIb,QAAQ,CAAC,MAAMQ,KAAK,CAACM,KAAK,CAACD,OAAO;IAClD,MAAME,WAAU,GAAIf,QAAQ,CAAC,MAAMQ,KAAK,CAACQ,OAAO,CAACD,WAAW;;IAE5D;IACA,MAAME,eAAc,GAAI,MAAAA,CAAA,KAAY;MAClCR,UAAU,CAACS,KAAI,GAAI,IAAG;MACtBN,YAAY,CAACM,KAAI,GAAI,EAAC;MAEtB,IAAI;QACF,MAAML,OAAM,GAAI,MAAML,KAAK,CAACW,QAAQ,CAAC,eAAe;QACpD,IAAI,CAACN,OAAO,EAAE;UACZD,YAAY,CAACM,KAAI,GAAI,2BAA0B;QACjD;MACF,EAAE,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK;QAC9BR,YAAY,CAACM,KAAI,GAAI,aAAY,GAAIE,KAAK,CAACE,OAAM;MACnD,UAAU;QACRb,UAAU,CAACS,KAAI,GAAI,KAAI;MACzB;IACF;;IAEA;IACA,MAAMK,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjCb,YAAY,CAACQ,KAAI,GAAI,IAAG;MACxB,IAAI;QACF;QACA,MAAMM,QAAO,GAAI,IAAIrB,MAAM,CAACsB,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ;QAClE,MAAMC,OAAM,GAAI,MAAML,QAAQ,CAACM,UAAU,CAAC;QAE1C,IAAID,OAAO,CAACE,OAAM,KAAM,IAAI,EAAE;UAC5BC,KAAK,CAAC,eAAe;UACrBtB,YAAY,CAACQ,KAAI,GAAI,KAAI;UACzB;QACF;;QAEA;QACA,MAAMe,QAAO,GAAI,MAAM7B,GAAG,CAACmB,cAAc,CAAC;QAC1CF,OAAO,CAACa,GAAG,CAAC,QAAQ,EAAED,QAAQ;QAE9B,IAAIA,QAAQ,CAACE,IAAG,KAAM,CAAC,EAAE;UACvBxB,WAAW,CAACO,KAAI,GAAI,IAAG;UACvBV,KAAK,CAAC4B,MAAM,CAAC,gBAAgB,EAAE,IAAI;QACrC,OAAO;UACLJ,KAAK,CAAC,SAAQ,GAAIC,QAAQ,CAACX,OAAO;QACpC;MACF,EAAE,OAAOF,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK;QACjCY,KAAK,CAAC,gBAAe,GAAIZ,KAAK,CAACE,OAAO;MACxC,UAAU;QACRZ,YAAY,CAACQ,KAAI,GAAI,KAAI;MAC3B;IACF;;IAEA;IACAjB,SAAS,CAAC,YAAY;MACpB;MACA,IAAI0B,MAAM,CAACC,QAAO,IAAKD,MAAM,CAACC,QAAQ,CAACS,eAAe,EAAE;QACtD,MAAMpB,eAAe,CAAC;MACxB;IACF,CAAC;IAED,OAAO;MACLA,eAAe;MACfM,cAAc;MACdV,OAAO;MACPE,WAAW;MACXN,UAAU;MACVC,YAAY;MACZC,WAAW;MACXC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}