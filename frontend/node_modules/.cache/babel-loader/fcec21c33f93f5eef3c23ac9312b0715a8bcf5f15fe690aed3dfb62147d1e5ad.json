{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"connect-section\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"init-section\"\n};\nconst _hoisted_4 = {\n  class: \"action-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_alert = _resolveComponent(\"el-alert\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_result = _resolveComponent(\"el-result\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"box-card\"\n  }, {\n    header: _withCtx(() => _cache[1] || (_cache[1] = [_createElementVNode(\"div\", {\n      class: \"card-header\"\n    }, [_createElementVNode(\"h1\", null, \"课程分配系统\")], -1 /* HOISTED */)])),\n    default: _withCtx(() => [!$setup.isConnected ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [$setup.connectError ? (_openBlock(), _createBlock(_component_el_alert, {\n      key: 0,\n      title: $setup.connectError,\n      type: \"error\",\n      \"show-icon\": \"\",\n      closable: false,\n      style: {\n        \"margin-bottom\": \"20px\"\n      }\n    }, null, 8 /* PROPS */, [\"title\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.connectMetaMask,\n      loading: $setup.connecting\n    }, {\n      default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 连接 MetaMask 钱包 \")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\", \"loading\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, \"当前钱包地址: \" + _toDisplayString($setup.account), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n      type: \"success\",\n      onClick: $setup.initializeData,\n      loading: $setup.initializing,\n      disabled: $setup.initialized\n    }, {\n      default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\" 一键初始化系统数据 \")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\", \"loading\", \"disabled\"]), _createVNode(_component_el_button, {\n      type: \"info\",\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/about'))\n    }, {\n      default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"关于系统\")])),\n      _: 1 /* STABLE */\n    })]), $setup.initialized ? (_openBlock(), _createBlock(_component_el_result, {\n      key: 0,\n      icon: \"success\",\n      title: \"初始化成功\",\n      \"sub-title\": \"系统数据已成功初始化，可以开始使用系统功能\"\n    })) : _createCommentVNode(\"v-if\", true)]))]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_cache","_createElementVNode","default","$setup","isConnected","_hoisted_2","connectError","_createBlock","_component_el_alert","title","type","closable","style","_createCommentVNode","_component_el_button","onClick","connectMetaMask","loading","connecting","_createTextVNode","_","_hoisted_3","_toDisplayString","account","_hoisted_4","initializeData","initializing","disabled","initialized","$event","_ctx","$router","push","_component_el_result","icon"],"sources":["E:\\dao\\327\\Course-allocation\\frontend\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <h1>课程分配系统</h1>\n        </div>\n      </template>\n      <div v-if=\"!isConnected\" class=\"connect-section\">\n        <el-alert\n          v-if=\"connectError\"\n          :title=\"connectError\"\n          type=\"error\"\n          show-icon\n          :closable=\"false\"\n          style=\"margin-bottom: 20px;\"\n        />\n        <el-button type=\"primary\" @click=\"connectMetaMask\" :loading=\"connecting\">\n          连接 MetaMask 钱包\n        </el-button>\n      </div>\n      <div v-else class=\"init-section\">\n        <p>当前钱包地址: {{ account }}</p>\n        <div class=\"action-buttons\">\n          <el-button \n            type=\"success\" \n            @click=\"initializeData\"\n            :loading=\"initializing\"\n            :disabled=\"initialized\"\n          >\n            一键初始化系统数据\n          </el-button>\n          <el-button type=\"info\" @click=\"$router.push('/about')\">关于系统</el-button>\n        </div>\n        <el-result \n          v-if=\"initialized\" \n          icon=\"success\" \n          title=\"初始化成功\" \n          sub-title=\"系统数据已成功初始化，可以开始使用系统功能\"\n        />\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { ethers } from 'ethers'\nimport api from '../api'\n\n// 导入合约配置\nimport contractConfig from '../contractConfig'\n\nexport default {\n  name: 'HomeView',\n  setup() {\n    const store = useStore()\n    const connecting = ref(false)\n    const initializing = ref(false)\n    const initialized = ref(false)\n    const connectError = ref('')\n\n    // 从Vuex获取状态\n    const account = computed(() => store.state.account)\n    const isConnected = computed(() => store.getters.isConnected)\n\n    // 连接MetaMask\n    const connectMetaMask = async () => {\n      connecting.value = true\n      connectError.value = ''\n      \n      try {\n        const account = await store.dispatch('connectWallet')\n        if (!account) {\n          connectError.value = '连接钱包失败，请确保已安装MetaMask并已登录'\n        }\n      } catch (error) {\n        console.error('连接钱包错误:', error)\n        connectError.value = '连接钱包时发生错误: ' + error.message\n      } finally {\n        connecting.value = false\n      }\n    }\n\n    // 初始化系统数据\n    const initializeData = async () => {\n      initializing.value = true\n      try {\n        // 检查网络是否为Ganache (ID 1337)\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\n        const network = await provider.getNetwork()\n        \n        if (network.chainId !== 1337) {\n          alert('请连接到Ganache网络')\n          initializing.value = false\n          return\n        }\n\n        // 调用后端API初始化数据\n        const response = await api.initializeData()\n        console.log('初始化结果:', response)\n        \n        if (response.code === 0) {\n          initialized.value = true\n          store.commit('setInitialized', true)\n        } else {\n          alert('初始化失败: ' + response.message)\n        }\n      } catch (error) {\n        console.error('初始化系统数据错误:', error)\n        alert('初始化系统数据时发生错误: ' + error.message)\n      } finally {\n        initializing.value = false\n      }\n    }\n\n    // 组件挂载时执行\n    onMounted(async () => {\n      // 如果已经有MetaMask连接，则自动连接\n      if (window.ethereum && window.ethereum.selectedAddress) {\n        await connectMetaMask()\n      }\n    })\n\n    return {\n      connectMetaMask,\n      initializeData,\n      account,\n      isConnected,\n      connecting,\n      initializing,\n      initialized,\n      connectError\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home-container {\n  max-width: 800px;\n  margin: 50px auto;\n  padding: 0 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.connect-section, .init-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  padding: 20px 0;\n}\n\n.action-buttons {\n  display: flex;\n  gap: 15px;\n  margin: 20px 0;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAD7BC,GAAA;EAQ+BD,KAAK,EAAC;;;EARrCC,GAAA;EAqBkBD,KAAK,EAAC;;;EAEXA,KAAK,EAAC;AAAgB;;;;;;uBAtBjCE,mBAAA,CAyCM,OAzCNC,UAyCM,GAxCJC,YAAA,CAuCUC,kBAAA;IAvCDL,KAAK,EAAC;EAAU;IACZM,MAAM,EAAAC,QAAA,CACf,MAEMC,MAAA,QAAAA,MAAA,OAFNC,mBAAA,CAEM;MAFDT,KAAK,EAAC;IAAa,IACtBS,mBAAA,CAAe,YAAX,QAAM,E;IALpBC,OAAA,EAAAH,QAAA,CAOc,MAWoB,C,CAVhBI,MAAA,CAAAC,WAAW,I,cAAvBV,mBAAA,CAYM,OAZNW,UAYM,GAVIF,MAAA,CAAAG,YAAY,I,cADpBC,YAAA,CAOEC,mBAAA;MAhBVf,GAAA;MAWWgB,KAAK,EAAEN,MAAA,CAAAG,YAAY;MACpBI,IAAI,EAAC,OAAO;MACZ,WAAS,EAAT,EAAS;MACRC,QAAQ,EAAE,KAAK;MAChBC,KAA4B,EAA5B;QAAA;MAAA;0CAfVC,mBAAA,gBAiBQjB,YAAA,CAEYkB,oBAAA;MAFDJ,IAAI,EAAC,SAAS;MAAEK,OAAK,EAAEZ,MAAA,CAAAa,eAAe;MAAGC,OAAO,EAAEd,MAAA,CAAAe;;MAjBrEhB,OAAA,EAAAH,QAAA,CAiBiF,MAEzEC,MAAA,QAAAA,MAAA,OAnBRmB,gBAAA,CAiBiF,kBAEzE,E;MAnBRC,CAAA;kEAqBM1B,mBAAA,CAmBM,OAnBN2B,UAmBM,GAlBJpB,mBAAA,CAA4B,WAAzB,UAAQ,GAAAqB,gBAAA,CAAGnB,MAAA,CAAAoB,OAAO,kBACrBtB,mBAAA,CAUM,OAVNuB,UAUM,GATJ5B,YAAA,CAOYkB,oBAAA;MANVJ,IAAI,EAAC,SAAS;MACbK,OAAK,EAAEZ,MAAA,CAAAsB,cAAc;MACrBR,OAAO,EAAEd,MAAA,CAAAuB,YAAY;MACrBC,QAAQ,EAAExB,MAAA,CAAAyB;;MA5BvB1B,OAAA,EAAAH,QAAA,CA6BW,MAEDC,MAAA,QAAAA,MAAA,OA/BVmB,gBAAA,CA6BW,aAED,E;MA/BVC,CAAA;2DAgCUxB,YAAA,CAAuEkB,oBAAA;MAA5DJ,IAAI,EAAC,MAAM;MAAEK,OAAK,EAAAf,MAAA,QAAAA,MAAA,MAAA6B,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;;MAhCrD9B,OAAA,EAAAH,QAAA,CAgCiE,MAAIC,MAAA,QAAAA,MAAA,OAhCrEmB,gBAAA,CAgCiE,MAAI,E;MAhCrEC,CAAA;UAmCgBjB,MAAA,CAAAyB,WAAW,I,cADnBrB,YAAA,CAKE0B,oBAAA;MAvCVxC,GAAA;MAoCUyC,IAAI,EAAC,SAAS;MACdzB,KAAK,EAAC,OAAO;MACb,WAAS,EAAC;UAtCpBI,mBAAA,e;IAAAO,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}