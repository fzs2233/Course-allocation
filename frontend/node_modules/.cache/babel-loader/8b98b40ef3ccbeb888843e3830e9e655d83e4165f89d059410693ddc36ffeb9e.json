{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { ethers } from 'ethers';\nimport axios from 'axios';\n\n// 导入合约配置\nimport contractConfig from '../contractConfig';\nexport default {\n  name: 'HomeView',\n  setup() {\n    const store = useStore();\n    const connecting = ref(false);\n    const initializing = ref(false);\n    const initialized = ref(false);\n    const connectError = ref('');\n\n    // 从Vuex获取状态\n    const account = computed(() => store.state.account);\n    const isConnected = computed(() => store.getters.isConnected);\n\n    // 连接MetaMask\n    const connectMetaMask = async () => {\n      connecting.value = true;\n      connectError.value = '';\n      try {\n        const account = await store.dispatch('connectWallet');\n        if (!account) {\n          connectError.value = '连接钱包失败，请确保已安装MetaMask并已登录';\n        }\n      } catch (error) {\n        console.error('连接钱包错误:', error);\n        connectError.value = '连接钱包时发生错误: ' + error.message;\n      } finally {\n        connecting.value = false;\n      }\n    };\n\n    // 初始化系统数据\n    const initializeData = async () => {\n      initializing.value = true;\n      try {\n        // 检查网络是否为Ganache (ID 1337)\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const network = await provider.getNetwork();\n        if (network.chainId !== 1337) {\n          alert('请连接到Ganache网络');\n          initializing.value = false;\n          return;\n        }\n\n        // 调用后端API初始化数据\n        const response = await axios.post('/api/initialize');\n        console.log('初始化结果:', response.data);\n        if (response.data.code === 0) {\n          initialized.value = true;\n          store.commit('setInitialized', true);\n        } else {\n          alert('初始化失败: ' + response.data.message);\n        }\n      } catch (error) {\n        console.error('初始化系统数据错误:', error);\n        alert('初始化系统数据时发生错误: ' + error.message);\n      } finally {\n        initializing.value = false;\n      }\n    };\n\n    // 组件挂载时执行\n    onMounted(async () => {\n      // 如果已经有MetaMask连接，则自动连接\n      if (window.ethereum && window.ethereum.selectedAddress) {\n        await connectMetaMask();\n      }\n    });\n    return {\n      connectMetaMask,\n      initializeData,\n      account,\n      isConnected,\n      connecting,\n      initializing,\n      initialized,\n      connectError\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","ethers","axios","contractConfig","name","setup","store","connecting","initializing","initialized","connectError","account","state","isConnected","getters","connectMetaMask","value","dispatch","error","console","message","initializeData","provider","providers","Web3Provider","window","ethereum","network","getNetwork","chainId","alert","response","post","log","data","code","commit","selectedAddress"],"sources":["E:\\dao\\327\\Course-allocation\\frontend\\src\\views\\Home.vue"],"sourcesContent":["<template>\r\n  <div class=\"home-container\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h1>课程分配系统</h1>\r\n        </div>\r\n      </template>\r\n      <div v-if=\"!isConnected\" class=\"connect-section\">\r\n        <el-alert\r\n          v-if=\"connectError\"\r\n          :title=\"connectError\"\r\n          type=\"error\"\r\n          show-icon\r\n          :closable=\"false\"\r\n          style=\"margin-bottom: 20px;\"\r\n        />\r\n        <el-button type=\"primary\" @click=\"connectMetaMask\" :loading=\"connecting\">\r\n          连接 MetaMask 钱包\r\n        </el-button>\r\n      </div>\r\n      <div v-else class=\"init-section\">\r\n        <p>当前钱包地址: {{ account }}</p>\r\n        <div class=\"action-buttons\">\r\n          <el-button \r\n            type=\"success\" \r\n            @click=\"initializeData\"\r\n            :loading=\"initializing\"\r\n            :disabled=\"initialized\"\r\n          >\r\n            一键初始化系统数据\r\n          </el-button>\r\n          <el-button type=\"info\" @click=\"$router.push('/about')\">关于系统</el-button>\r\n        </div>\r\n        <el-result \r\n          v-if=\"initialized\" \r\n          icon=\"success\" \r\n          title=\"初始化成功\" \r\n          sub-title=\"系统数据已成功初始化，可以开始使用系统功能\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { ethers } from 'ethers'\r\nimport axios from 'axios'\r\n\r\n// 导入合约配置\r\nimport contractConfig from '../contractConfig'\r\n\r\nexport default {\r\n  name: 'HomeView',\r\n  setup() {\r\n    const store = useStore()\r\n    const connecting = ref(false)\r\n    const initializing = ref(false)\r\n    const initialized = ref(false)\r\n    const connectError = ref('')\r\n\r\n    // 从Vuex获取状态\r\n    const account = computed(() => store.state.account)\r\n    const isConnected = computed(() => store.getters.isConnected)\r\n\r\n    // 连接MetaMask\r\n    const connectMetaMask = async () => {\r\n      connecting.value = true\r\n      connectError.value = ''\r\n      \r\n      try {\r\n        const account = await store.dispatch('connectWallet')\r\n        if (!account) {\r\n          connectError.value = '连接钱包失败，请确保已安装MetaMask并已登录'\r\n        }\r\n      } catch (error) {\r\n        console.error('连接钱包错误:', error)\r\n        connectError.value = '连接钱包时发生错误: ' + error.message\r\n      } finally {\r\n        connecting.value = false\r\n      }\r\n    }\r\n\r\n    // 初始化系统数据\r\n    const initializeData = async () => {\r\n      initializing.value = true\r\n      try {\r\n        // 检查网络是否为Ganache (ID 1337)\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n        const network = await provider.getNetwork()\r\n        \r\n        if (network.chainId !== 1337) {\r\n          alert('请连接到Ganache网络')\r\n          initializing.value = false\r\n          return\r\n        }\r\n\r\n        // 调用后端API初始化数据\r\n        const response = await axios.post('/api/initialize')\r\n        console.log('初始化结果:', response.data)\r\n        \r\n        if (response.data.code === 0) {\r\n          initialized.value = true\r\n          store.commit('setInitialized', true)\r\n        } else {\r\n          alert('初始化失败: ' + response.data.message)\r\n        }\r\n      } catch (error) {\r\n        console.error('初始化系统数据错误:', error)\r\n        alert('初始化系统数据时发生错误: ' + error.message)\r\n      } finally {\r\n        initializing.value = false\r\n      }\r\n    }\r\n\r\n    // 组件挂载时执行\r\n    onMounted(async () => {\r\n      // 如果已经有MetaMask连接，则自动连接\r\n      if (window.ethereum && window.ethereum.selectedAddress) {\r\n        await connectMetaMask()\r\n      }\r\n    })\r\n\r\n    return {\r\n      connectMetaMask,\r\n      initializeData,\r\n      account,\r\n      isConnected,\r\n      connecting,\r\n      initializing,\r\n      initialized,\r\n      connectError\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.home-container {\r\n  max-width: 800px;\r\n  margin: 50px auto;\r\n  padding: 0 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.connect-section, .init-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 20px;\r\n  padding: 20px 0;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin: 20px 0;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}